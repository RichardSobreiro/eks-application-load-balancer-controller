apiVersion: apps/v1
kind: Deployment
metadata:
  name: author-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: author
  template:
    metadata:
      labels:
        app.kubernetes.io/name: author
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.3
        ports:
        - containerPort: 80
        volumeMounts:
        - name: workdir
          mountPath: /usr/share/nginx/html
      # These containers are run during pod initialization
      initContainers:
      - name: install
        image: bitnami/git
        command: ["git"]
        args: ["clone", "https://github.com/aws-samples/amazon-apigateway-ingress-controller-blog.git", "/var/lib/data/"]
        volumeMounts:
        - name: workdir
          mountPath: "/var/lib/data"
      dnsPolicy: Default
      volumes:
      - name: workdir
        emptyDir: {}     
---
apiVersion: v1
kind: Service
metadata:
  name: authorservice
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: author
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver
    spec:
      containers:
      - image: gcr.io/google_containers/echoserver:1.4
        imagePullPolicy: Always
        name: echoserver
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: echoserver
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-author-echo-service
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/tags: Project=aws-eks-load-balancer-controller,Name=ALBIngress
    # alb.ingress.kubernetes.io/group.name: alb-group
    # alb.ingress.kubernetes.io/group.order: '1'
spec:
  rules:
    - http:
        paths:
          - path: /author/
            pathType: Prefix
            backend:
              service:
                name: authorservice
                port: 
                  number: 80
          - path: /meta/
            pathType: Prefix
            backend:
              service:
                name: echoserver
                port: 
                  number: 80

           